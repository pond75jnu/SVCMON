# Generated by Django 5.0.7 on 2025-08-08 11:44

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Domain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain', models.CharField(max_length=255, verbose_name='도메인명')),
                ('site_name', models.CharField(max_length=255, verbose_name='사이트명')),
                ('owner_name', models.CharField(max_length=100, verbose_name='담당자명')),
                ('note', models.TextField(blank=True, verbose_name='비고')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일시')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정일시')),
            ],
            options={
                'verbose_name': '도메인',
                'verbose_name_plural': '도메인',
                'db_table': 'domains',
            },
        ),
        migrations.CreateModel(
            name='NetworkGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='망구분명')),
                ('note', models.TextField(blank=True, verbose_name='비고')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일시')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정일시')),
            ],
            options={
                'verbose_name': '망구분',
                'verbose_name_plural': '망구분',
                'db_table': 'network_groups',
            },
        ),
        migrations.CreateModel(
            name='Setting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=100, unique=True, verbose_name='키')),
                ('value', models.TextField(verbose_name='값')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정일시')),
            ],
            options={
                'verbose_name': '설정',
                'verbose_name_plural': '설정',
                'db_table': 'settings',
            },
        ),
        migrations.CreateModel(
            name='ConfigRevision',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(max_length=500, verbose_name='변경사유')),
                ('changed_at', models.DateTimeField(auto_now_add=True, verbose_name='변경일시')),
                ('changed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='변경자')),
            ],
            options={
                'verbose_name': '설정변경이력',
                'verbose_name_plural': '설정변경이력',
                'db_table': 'config_revisions',
                'ordering': ['-changed_at'],
            },
        ),
        migrations.CreateModel(
            name='Endpoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(max_length=2000, verbose_name='URL')),
                ('requires_db', models.BooleanField(default=False, verbose_name='DB연결 필요여부')),
                ('note', models.TextField(blank=True, verbose_name='비고')),
                ('poll_interval_sec', models.IntegerField(default=300, verbose_name='호출주기(초)')),
                ('email_on_failure', models.BooleanField(default=True, verbose_name='장애시 이메일 발송')),
                ('is_enabled', models.BooleanField(default=True, verbose_name='활성화')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일시')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정일시')),
                ('domain', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='endpoints', to='monitoring.domain', verbose_name='도메인')),
            ],
            options={
                'verbose_name': '엔드포인트',
                'verbose_name_plural': '엔드포인트',
                'db_table': 'endpoints',
            },
        ),
        migrations.AddField(
            model_name='domain',
            name='network_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='domains', to='monitoring.networkgroup', verbose_name='망구분'),
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(max_length=10, verbose_name='알림레벨')),
                ('title', models.CharField(max_length=200, verbose_name='제목')),
                ('body', models.TextField(verbose_name='내용')),
                ('sent_to', models.EmailField(max_length=254, verbose_name='수신자')),
                ('sent_at', models.DateTimeField(auto_now_add=True, verbose_name='발송일시')),
                ('dedupe_key', models.CharField(blank=True, max_length=100, null=True, verbose_name='중복제거키')),
                ('status', models.CharField(choices=[('SENT', '발송완료'), ('SKIPPED', '건너뜀'), ('FAILED', '발송실패')], default='SENT', max_length=10, verbose_name='상태')),
                ('endpoint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='monitoring.endpoint', verbose_name='엔드포인트')),
            ],
            options={
                'verbose_name': '알림',
                'verbose_name_plural': '알림',
                'db_table': 'notifications',
                'ordering': ['-sent_at'],
            },
        ),
        migrations.CreateModel(
            name='Rollup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(choices=[('network', '망구분'), ('domain', '도메인'), ('endpoint', '엔드포인트')], max_length=10, verbose_name='레벨')),
                ('ref_id', models.IntegerField(verbose_name='참조ID')),
                ('last_status', models.CharField(choices=[('GREEN', '정상'), ('AMBER', '신호없음'), ('RED', '장애')], default='AMBER', max_length=6, verbose_name='최종상태')),
                ('last_change_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='최종변경일시')),
                ('last_reason', models.CharField(blank=True, max_length=400, verbose_name='최종사유')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='갱신일시')),
            ],
            options={
                'verbose_name': '상태롤업',
                'verbose_name_plural': '상태롤업',
                'db_table': 'rollups',
                'unique_together': {('level', 'ref_id')},
            },
        ),
        migrations.CreateModel(
            name='Check',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_code', models.IntegerField(null=True, verbose_name='HTTP 상태코드')),
                ('latency_ms', models.IntegerField(null=True, verbose_name='응답시간(ms)')),
                ('headers', models.TextField(blank=True, null=True, verbose_name='응답헤더')),
                ('error', models.TextField(blank=True, null=True, verbose_name='오류메시지')),
                ('checked_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='체크일시')),
                ('trace_id', models.UUIDField(default=uuid.uuid4, editable=False, verbose_name='추적ID')),
                ('endpoint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='checks', to='monitoring.endpoint', verbose_name='엔드포인트')),
            ],
            options={
                'verbose_name': '헬스체크',
                'verbose_name_plural': '헬스체크',
                'db_table': 'checks',
                'ordering': ['-checked_at'],
                'indexes': [models.Index(fields=['endpoint', '-checked_at'], name='checks_endpoin_412684_idx')],
            },
        ),
        migrations.AlterUniqueTogether(
            name='domain',
            unique_together={('network_group', 'domain')},
        ),
    ]
